openapi: 3.0.0
info:
  title: Lightning Api
  version: 1.0.0
  license:
    name: Apache 2.0
  description: |-
    # BCDC Lightning API
    This is the documentation for the BCDC Lightning API.
paths:
  /subscribe:
    get:
      security:
        - ApiKeyAuth: []
          AppId: []
      description: Gets a list of all the subscriptions
      responses:
        '200':
          description: List of subscriptions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscriptions"
        '401':
          description: unauthorized
    post:
      security:
        - ApiKeyAuth: []
          AppId: []
      summary: Subscribes a client to receive Webhooks
      description: |-
       Subscribes a client to receive Webhooks. That client should expect http calls in the future to that exact url.
       That client should response 202 (ACCEPTED) if it received the message, or at least a 200 (OK). If it returns 204 (NOT_ACCEPTABLE)
       The it will be unsubscribed once the current payload is finished. The API will automatically chunk things to a configurable size
       and therefore you will need to reassemble the JSON payload on the other end once it is finished. The payload contains:
       ```
       {
            "datasetId": dataset id the notification is about,
            "subscriptionId": the subscription id of the subscription that generated this call,
            "filename": the file name, normally whats after the last / in the datasetid,
            "part": the current chunk this is (for ordering),
            "chunks": the amount of chunks that will be sent,
            "data": the current chunk of data
        }
        ```

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubscriptionPost"
      responses:
        '201':
          description: subscription successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subscription"
        '400':
          description: Error occured creating subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '401':
          description: unauthorized

  /notify:
    post:
      security:
        - ApiKeyAuth: []
          AppId: ['admin']
      description: Triggers notification on a dataset id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyPost"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotifyOK"
        '500':
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '400':
          description: error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '401':
          description: unauthorized

  /unsubscribe:
    post:
      security:
        - ApiKeyAuth: []
          AppId: []
      summary: Unsubscribes a client from webhooks
      description: |-
        Unsubscribes a client from getting notifications from the chosen databases. The client sends to the server
        a list of their desired databases to unsubsribe to , as well as their unique notification url.
        ```
        {
             "datasetIds": json list of all ids to unsubscribe to,
             "notifcationUrl": the unique url of the client also used in /notify
         }
         ```

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnsubscribePost"
      responses:
        '201':
          description: subscription successfully deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsubscribeOK"
        '400':
          description: Error occured deleting subscription
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

        '401':
          description: unauthorized

components:
  schemas:
    _id:
      type: Object
      description: Object id
      schema:
        properties:
          $oid:
            type: string
            description: Object id
            example: 2531329f-fb09-4ef7-887e-84e648214436

    id:
      type: string
      description: Object id
      example: 2531329f-fb09-4ef7-887e-84e648214436

    datasetId:
      type: string
      description: Object id
      example: 2531329f-fb09-4ef7-887e-84e648214436

    notificationUrl:
      type: string
      description: Object id
      format: url
      example: http://example.com

    SubscriptionList:
      required:
        - _id
        - datasetId
        - notificationUrl
      properties:
        _id:
          $ref: "#/components/schemas/_id"
        datasetId:
          $ref: "#/components/schemas/datasetId"
        notificationUrl:
          $ref: "#/components/schemas/notificationUrl"

    Subscriptions:
      type: array
      items:
        $ref: "#/components/schemas/SubscriptionList"

    Subscription:
      required:
        - id
        - datasetId
        - notificationUrl
      properties:
        id:
          $ref: "#/components/schemas/id"
        datasetId:
          $ref: "#/components/schemas/datasetId"
        notificationUrl:
          $ref: "#/components/schemas/notificationUrl"

    SubscriptionPost:
      required:
        - datasetId
        - notificationUrl
      properties:
        datasetId:
          $ref: "#/components/schemas/datasetId"
          in: "body"
        notificationUrl:
          $ref: "#/components/schemas/notificationUrl"
          in: "body"

    NotifyPost:
      required:
        - datasetId
      properties:
        datasetId:
          $ref: "#/components/schemas/datasetId"
          in: "body"

    NotifyOK:
      required:
        - message
      properties:
        datasetId:
          type: string
          example: "Started notifications"
          in: "body"

    Error:
      required:
        - error
      properties:
        error:
          type: string
          description: contains a message about the failure

    UnsubscribePost:
      required:
        - datasetId
      properties:
        datasetId:
          $ref: "#/components/schemas/datasetId"
          in: "body"

    UnsubscribeOK:
      required:
        - message
      properties:
        datasetId:
          type: string
          example: "4 records deleted."
          in: "body"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
    AppId:
      type: apiKey
      in: header
      name: id

servers:
  - url: '/v1/'